
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFFleftIMPLIESleftORNORleftANDNANDrightNOTAND IFF IMPLIES LPAREN NAND NOR NOT OR RPAREN VARIAVEL\n    expression : expression AND expression\n               | expression OR expression\n               | expression IMPLIES expression\n               | expression IFF expression\n               | expression NOR expression\n               | expression NAND expression\n    expression : NOT expressionexpression : LPAREN expression RPARENexpression : VARIAVEL'
    
_lr_action_items = {'NOT':([0,2,3,5,6,7,8,9,10,],[2,2,2,2,2,2,2,2,2,]),'LPAREN':([0,2,3,5,6,7,8,9,10,],[3,3,3,3,3,3,3,3,3,]),'VARIAVEL':([0,2,3,5,6,7,8,9,10,],[4,4,4,4,4,4,4,4,4,]),'$end':([1,4,11,13,14,15,16,17,18,19,],[0,-9,-7,-1,-2,-3,-4,-5,-6,-8,]),'AND':([1,4,11,12,13,14,15,16,17,18,19,],[5,-9,-7,5,-1,5,5,5,5,-6,-8,]),'OR':([1,4,11,12,13,14,15,16,17,18,19,],[6,-9,-7,6,-1,-2,6,6,-5,-6,-8,]),'IMPLIES':([1,4,11,12,13,14,15,16,17,18,19,],[7,-9,-7,7,-1,-2,-3,7,-5,-6,-8,]),'IFF':([1,4,11,12,13,14,15,16,17,18,19,],[8,-9,-7,8,-1,-2,-3,-4,-5,-6,-8,]),'NOR':([1,4,11,12,13,14,15,16,17,18,19,],[9,-9,-7,9,-1,-2,9,9,-5,-6,-8,]),'NAND':([1,4,11,12,13,14,15,16,17,18,19,],[10,-9,-7,10,-1,10,10,10,10,-6,-8,]),'RPAREN':([4,11,12,13,14,15,16,17,18,19,],[-9,-7,19,-1,-2,-3,-4,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,5,6,7,8,9,10,],[1,11,12,13,14,15,16,17,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','main.py',96),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','main.py',97),
  ('expression -> expression IMPLIES expression','expression',3,'p_expression_binop','main.py',98),
  ('expression -> expression IFF expression','expression',3,'p_expression_binop','main.py',99),
  ('expression -> expression NOR expression','expression',3,'p_expression_binop','main.py',100),
  ('expression -> expression NAND expression','expression',3,'p_expression_binop','main.py',101),
  ('expression -> NOT expression','expression',2,'p_expression_not','main.py',122),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',127),
  ('expression -> VARIAVEL','expression',1,'p_expression_variable','main.py',131),
]
